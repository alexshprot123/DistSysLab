version: "3"

services:
  postgres:
    image: postgres:13.3
    container_name: postgres
    environment:
      POSTGRES_DB: "items"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - 15432:5432
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - app-net
  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - 15672:15672
    networks:
      - app-net
  quarkus-app:
    image: quarkus-app:1.0
    build:
      context: ./quarkus-app
      dockerfile: src/main/docker/dockerfile.jvm
    environment:
      DATA_BASE_USERNAME: "postgres"
      DATA_BASE_PASSWORD: "postgres"
      DATA_BASE_URL: "jdbc:postgresql://postgres:5432/items"
      RABBITMQ_HOST: "rabbitmq"
      RABBITMQ_PORT: "5672"
    ports:
      - 8080:8080
    depends_on:
      - postgres
      - rabbitmq
      - logstash
    networks:
      - app-net
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#    restart: unless-stopped
#    ports:
#      - 9090:9090
#    volumes:
#      - ./monitoring/prometheus:/etc/prometheus
#      - prometheus-data:/prometheus
#    networks:
#      - app-net
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    restart: unless-stopped
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    ports:
#      - 3000:3000
#    networks:
#      - app-net
  elasticsearch:
    image: elasticsearch:8.13.4
    ports:
      - 9200:9200
      - 9300:9300
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      discovery.type: "single-node"
      cluster.routing.allocation.disk.threshold_enabled: false
      xpack.security.enabled: false
    networks:
      - app-net

  logstash:
    image: logstash:8.13.4
    container_name: logstash
    volumes:
      - ./logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/pipelines/gelf.conf:/usr/share/logstash/config/pipelines/gelf.conf
    environment:
      XPACK_MONITORING_ENABLED: "false"
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    networks:
      - app-net
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:8.13.4
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      monitoring.ui.container.elasticsearch.enabled: true
      elasticsearch.hosts: "http://elasticsearch:9200"
    networks:
      - app-net
volumes:
  postgres-volume:
    name: postgres-volume
  prometheus-data:
    name: prometheus-data
networks:
  app-net:
    external:
      name: app-net


